#include "encoding.hpp"

using Encoding::encoding_error;

// see: https://unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP1252.TXT

inline Unicode::codepoint_t get_codepoint(const char cp1252) {
	switch(cp1252) {
		case 0x80: return 0x20AC;
		case 0x82: return 0x201A;
		case 0x83: return 0x0192;
		case 0x84: return 0x201E;
		case 0x85: return 0x2026;
		case 0x86: return 0x2020;
		case 0x87: return 0x2021;
		case 0x88: return 0x02C6;
		case 0x89: return 0x2030;
		case 0x8A: return 0x0160;
		case 0x8B: return 0x2039;
		case 0x8C: return 0x0152;
		case 0x8E: return 0x017D;
		case 0x91: return 0x2018;
		case 0x92: return 0x2019;
		case 0x93: return 0x201C;
		case 0x94: return 0x201D;
		case 0x95: return 0x2022;
		case 0x96: return 0x2013;
		case 0x97: return 0x2014;
		case 0x98: return 0x02DC;
		case 0x99: return 0x2122;
		case 0x9A: return 0x0161;
		case 0x9B: return 0x203A;
		case 0x9C: return 0x0153;
		case 0x9E: return 0x017E;
		case 0x9F: return 0x0178;

		case 0x81:
		case 0x8D:
		case 0x8F:
		case 0x90:
		case 0x9D:
			throw new encoding_error("CP-1252: Byte is undefined: " std::to_string(cp1252));

		// 0x00 - 0x7F and 0xA0 - 0xFF
		default:
			return cp1252;
	}
}
